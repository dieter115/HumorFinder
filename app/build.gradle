// define build version
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0
/**
 * apply android application plugin and the crashlytics plugin
 */
apply plugin: 'com.android.application'
repositories {
    mavenLocal()
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://jitpack.io"
    }
    maven { url 'https://raw.github.com/rejasupotaro/AsyncRssClient/master/AsyncRssClient/repository' }


    jcenter()
    // fall back to central
    mavenCentral()
}
/**
 * Check if a signing.gradle file exists and import it
 */
if (file(rootProject.projectDir.getAbsolutePath() + '/signing.gradle').exists()) {
    apply from: rootProject.projectDir.getAbsolutePath() + '/signing.gradle'
}
android {
    compileSdkVersion 23
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId "be.appwise.sbb"
        minSdkVersion 16
        targetSdkVersion 23
        renderscriptTargetApi 22
        renderscriptSupportModeEnabled true
        multiDexEnabled true

        // generate versionCode and versionName from defined major, minor, versionPatch, versionBuild
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        /**
         * If we have signingconfig for this buildType we'll use it here
         * this block should be added to every buildtype that needs signing
         */
        if (signingConfigs.hasProperty("release")) {
            signingConfig signingConfigs.release
        }
    }
    /*bugfix*/
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            if (signingConfigs.hasProperty("release")) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            // enable crashlytics where you need
            minifyEnabled false
            shrinkResources false
        }

    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    productFlavors {
        demo {
            buildConfigField 'String', 'ENDPOINT_URL', "\"http://cc44b839.ngrok.io\""
        }
        full {
            buildConfigField 'String', 'ENDPOINT_URL', "\"https://sbb.appwise-dev.com\""
        }

    }
    /**
     * Fix build filenames
     * add flavor, version name and code to final apk file
     */
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            if (file != null && file.name.endsWith('.apk')) {
                def suffix = "_" + defaultConfig.applicationId + "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode
                def outputFileName = file.name.replace(".apk", suffix + ".apk")
                output.outputFile = new File(file.parent, outputFileName)
            }
        }
    }

/**
 * The dependencies we want to use are added to the project here
 * as well ass jar files in the libs folder, although if possible it's better to reference a project
 * through maven instead of an offline *.jar file, this will allow us to update the dependencies if needed
 * and limit the repository size
 */
    dependencies {
        // tell gradle to include the jar files
        compile fileTree(dir: 'libs', include: ['*.jar'])
        compile 'com.android.support:multidex:1.0.1'
        // the basic support libraries needed to support android up to sdk level 9
        compile 'com.android.support:appcompat-v7:23.0.1'
        compile 'com.android.support:support-v4:23.0.1'
        compile 'com.android.support:cardview-v7:23.0.1'
        compile 'com.android.support:recyclerview-v7:23.0.1'
        //Google Play Services
        compile 'com.google.android.gms:play-services:8.1.0'
        //Fabric: Crashlytics
        compile('com.crashlytics.sdk.android:crashlytics:2.3.2@aar') {
            transitive = true
        }
        //Butterknife
        compile 'com.jakewharton:butterknife:7.0.1'
        //Design support
        compile 'com.android.support:design:23.0.1'
        //Picasso
        compile 'com.squareup.picasso:picasso:2.5.2'
        //Subsampling ImageView
        compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.1.3'
        //Realm db
        compile 'io.realm:realm-android:0.80.3'
        //Logger => fancy log output
        compile 'com.orhanobut:logger:1.3'
        //Reactive programming
        compile 'io.reactivex:rxjava:1.0.0'
        compile 'io.reactivex:rxandroid:0.24.0'
        compile 'com.squareup.retrofit:retrofit:1.9.0'
        //okHttp required compiles for retrofit
        compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
        compile 'com.squareup.okhttp:okhttp:2.0.0'
        //otto event bus
        compile 'com.squareup:otto:1.3.6'
        //floating edittext
        compile 'com.wrapp.floatlabelededittext:library:0.0.5'
        //stetho
        compile 'com.facebook.stetho:stetho:1.1.0'
        compile 'io.realm:realm-android:0.83.1'
        //Material styled dialogs
        //compile 'com.afollestad:material-dialogs:0.7.1.1'
        //Better logger
        compile 'com.orhanobut:logger:1.11'
        compile('com.mikepenz:materialdrawer:4.4.4@aar') {
            transitive = true
        }
        compile 'com.github.sd6352051:NiftyNotification:1.2'
        compile 'com.mobsandgeeks:android-saripaar:2.0.3'
        compile 'eu.unicate.android:retroauth:1.0.3'
        compile 'com.jpardogo.materialtabstrip:library:1.1.0'
        compile 'com.squareup.okhttp:okhttp:2.5.0'
        compile('com.afollestad.material-dialogs:core:0.8.2.0@aar') {
            transitive = true
        }
        compile 'com.bartoszlipinski.recyclerviewheader:library:1.2.0'
        compile 'org.ocpsoft.prettytime:prettytime:4.0.0.Final'
        compile 'com.truizlop.sectionedrecyclerview:library:1.0.0'
        compile 'com.marshalchen.ultimaterecyclerview:library:0.3.18'
        compile 'jp.wasabeef:blurry:1.0.0'
        compile 'com.lguipeng.bubbleview:library:1.0.0'
        compile 'rejasupotaro:async-rss-client:0.0.6'
        compile "org.apache.httpcomponents:httpcore:4.3.2"
        compile ('com.squareup.retrofit:converter-simplexml:1.9.0'){
            exclude group: 'xpp3', module: 'xpp3'
            exclude group: 'stax', module: 'stax-api'
            exclude group: 'stax', module: 'stax'
        }





    }
}
